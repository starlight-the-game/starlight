{"version":3,"file":"static/js/2472.84dfd76b.chunk.js","mappings":"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","sources":["SongPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, Fragment, lazy, Suspense } from 'react';\r\nimport axios from 'axios';\r\nimport './Main_Menu_Style.css';\r\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\r\nimport { Unity, useUnityContext } from \"react-unity-webgl\";\r\nimport profilePicPlaceholder from './assets/profile.png'; // Placeholder for profile image\r\nimport logoIcon from './assets/Starlight-logo.png'; // Logo image\r\nimport leaveIcon from './assets/Header_Items/Leave-icon.png'; // Leave icon\r\nimport songsIcon from './assets/Header_Items/songs-icon.png'; // Songs icon\r\nimport historyIcon from './assets/Header_Items/history-icon.png'; // History icon\r\nimport eventsIcon from './assets/Header_Items/events-icon.png'; // Events icon\r\nimport storeIcon from './assets/Header_Items/store-icon.png'; // Store icon\r\nimport previousArrow from './assets/previousArrow.png'; // Previous button arrow\r\nimport nextArrow from './assets/nextArrow.png'; // Next button arrow\r\nimport bgSidebarImage from './assets/Collapsed_Sidebar/sidebar-bg.png'; // Sidebar background\r\nimport songSidebarIcon from './assets/Collapsed_Sidebar/Song-sidebar-icon.png'; // Song icon for sidebar\r\nimport Fuse from 'fuse.js';\r\nimport { FaSearch } from 'react-icons/fa';\r\n\r\nconst LandingPage = lazy(() => import('./LandingPageApp'));\r\nconst HistoryPage = lazy(() => import('./HistoryPage'));\r\nconst EventPage = lazy(() => import('./EventPage'));\r\nconst StorePage = lazy(() => import('./StorePage'));\r\nconst ProfilePage = lazy(() => import('./ProfilePage'));\r\nconst GameApp = lazy(() => import('./game/GameApp'));\r\n\r\nconst rootUrl = \"https://cluster1.swyrin.id.vn\";\r\n\r\nfunction SongPage() {\r\n  const [isSongListOpen, setIsSongListOpen] = useState(false);\r\n  const [userProfile, setUserProfile] = useState({});\r\n  const [songs, setSongs] = useState([]);\r\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [isGameOver, setIsGameOver] = useState(false);\r\n  const [userName, setUserName] = useState();\r\n  const [score, setScore] = useState();\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const fuse = new Fuse(songs, { keys: ['title'], threshold: 0.3 });\r\n\r\n  const filteredSongs = searchQuery ? fuse.search(searchQuery).map(result => result.item) : songs;\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  const handleSearchSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const { unityProvider, sendMessage, addEventListener, removeEventListener } = useUnityContext({\r\n    loaderUrl: \"build/myunityapp.loader.js\",\r\n    dataUrl: \"build/myunityapp.data\",\r\n    frameworkUrl: \"build/myunityapp.framework.js\",\r\n    codeUrl: \"build/myunityapp.wasm\",\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleGameOver = useCallback((userName, score) => {\r\n    setIsGameOver(true);\r\n    setUserName(userName);\r\n    setScore(score);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    addEventListener(\"GameOver\", handleGameOver);\r\n    return () => {\r\n      removeEventListener(\"GameOver\", handleGameOver);\r\n    };\r\n  }, [addEventListener, removeEventListener, handleGameOver]);\r\n\r\n  // Fetch user profile and song list data from the backend\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch user ID and username\r\n        const userResponse = await axios.get(`${rootUrl}/api/user`, {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          withCredentials: true\r\n        });\r\n        if (userResponse.status === 200) {\r\n          const userData = userResponse.data;\r\n          setUserProfile({\r\n            id: userData.id || 123456,\r\n            name: userData.name || 'Sanraku',\r\n            profilePic: userData.avatar || profilePicPlaceholder\r\n          });\r\n        } else {\r\n          console.error('Error fetching user data:', userResponse.statusText);\r\n        }\r\n\r\n        // Fetch all songs data\r\n        const songsResponse = await axios.get(`${rootUrl}/api/track/all`, {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        if (songsResponse.status === 200) {\r\n          const fetchedSongs = songsResponse.data;\r\n          setSongs(fetchedSongs);\r\n          if (fetchedSongs.length > 0) {\r\n            setCurrentSongIndex(0);\r\n          }\r\n        } else {\r\n          console.error('Error fetching songs data:', songsResponse.statusText);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, []);\r\n\r\n  const toggleSongList = () => {\r\n    setIsSongListOpen(!isSongListOpen);\r\n  };\r\n\r\n  const handleNextSong = useCallback(() => {\r\n    const imgElement = document.querySelector('.background-image img');\r\n    if (imgElement) {\r\n      imgElement.classList.add('fade-out');\r\n      imgElement.addEventListener('transitionend', () => {\r\n        setCurrentSongIndex((prevIndex) => (prevIndex + 1) % songs.length);\r\n        imgElement.classList.remove('fade-out');\r\n      }, { once: true });\r\n    }\r\n  }, [songs]);\r\n\r\n  const handlePreviousSong = useCallback(() => {\r\n    const imgElement = document.querySelector('.background-image img');\r\n    if (imgElement) {\r\n      imgElement.classList.add('fade-out');\r\n      imgElement.addEventListener('transitionend', () => {\r\n        setCurrentSongIndex((prevIndex) => (prevIndex - 1 + songs.length) % songs.length);\r\n        imgElement.classList.remove('fade-out');\r\n      }, { once: true });\r\n    }\r\n  }, [songs]);\r\n\r\n  const handlePlayButtonClick = async () => {\r\n    const currentSong = songs[currentSongIndex];\r\n    if (currentSong) {\r\n      try {\r\n        await axios.post(`${rootUrl}/api/play`, { songId: currentSong.id });\r\n        navigate(`/TestGame`, { state: { songId: currentSong.id } });\r\n      } catch (error) {\r\n        console.error('Error starting game:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleLeaveClick = () => {\r\n    setShowPopup(true);\r\n  };\r\n\r\n  const handleConfirmLeave = () => {\r\n    window.location.href = '/';\r\n  };\r\n\r\n  const handleCancelLeave = () => {\r\n    setShowPopup(false);\r\n  };\r\n\r\n  const currentSong = songs[currentSongIndex];\r\n\r\n  useEffect(() => {\r\n    let audio;\r\n    const playAudio = () => {\r\n      if (currentSong && currentSong.audioUrl) {\r\n        audio = new Audio(currentSong.audioUrl);\r\n        audio.loop = true; // Set audio to auto-replay\r\n        audio.play().catch(error => console.error('Error playing audio:', error));\r\n      }\r\n    };\r\n\r\n    playAudio(); // Play audio immediately on page load\r\n\r\n    return () => {\r\n      if (audio) {\r\n        audio.pause();\r\n        audio = null;\r\n      }\r\n    };\r\n  }, [currentSong]);\r\n\r\n  useEffect(() => {\r\n    const imgElement = document.querySelector('.background-image img');\r\n    if (imgElement) {\r\n      imgElement.addEventListener('transitionend', () => {\r\n        imgElement.classList.remove('morph');\r\n      });\r\n    }\r\n  }, [currentSong]);\r\n\r\n  const triggerButtonHoverEffect = (buttonClass) => {\r\n    const button = document.querySelector(buttonClass);\r\n    if (button) {\r\n      button.classList.add('hover');\r\n      setTimeout(() => {\r\n        button.classList.remove('hover');\r\n      }, 300); // Duration of the hover effect\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if (event.keyCode === 39) { // Right arrow key\r\n        handleNextSong();\r\n        triggerButtonHoverEffect('.next-btn');\r\n      } else if (event.keyCode === 37) { // Left arrow key\r\n        handlePreviousSong();\r\n        triggerButtonHoverEffect('.prev-btn');\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [handleNextSong, handlePreviousSong]);\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if (event.keyCode === 27) { // Esc key\r\n        event.preventDefault(); // Prevent exiting fullscreen\r\n        handleLeaveClick();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <Routes>\r\n          <Route path=\"/SongPage\" element={<SongPage />} />\r\n          <Route path=\"/HistoryPage\" element={<HistoryPage />} />\r\n          <Route path=\"/EventPage\" element={<EventPage />} />\r\n          <Route path=\"/StorePage\" element={<StorePage />} />\r\n          <Route path=\"/Logout\" element={<LandingPage />} />\r\n          <Route path=\"/ProfilePage\" element={<ProfilePage />} />\r\n          <Route path=\"/TestGame\" element={<GameApp songId={currentSong?.id} />} />\r\n        </Routes>\r\n      </Suspense>\r\n      <div className=\"songpage\">\r\n        {/* Header Navigation Bar */}\r\n        <header className=\"navbar\">\r\n          <div id=\"nav-icon1\" className={isSongListOpen ? 'open' : ''} onClick={toggleSongList}>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n          \r\n          <nav className=\"nav-links left\">\r\n            <Link to=\"/SongPage\">\r\n              <img src={songsIcon} alt=\"Songs\" className=\"nav-icon\" />\r\n              <span>Songs</span>\r\n            </Link>\r\n            <Link to=\"/HistoryPage\" state={{ currentSong: currentSong, currentSongIndex: currentSongIndex }}>\r\n              <img src={historyIcon} alt=\"History\" className=\"nav-icon\" />\r\n              <span>History</span>\r\n            </Link>\r\n          </nav>\r\n\r\n          {/* Center Curved Logo */}\r\n          <div className=\"logo-container\">\r\n            <a href=\"/SongPage\" className=\"logo\">\r\n              <span className=\"star-light\">\r\n                <span>STAR</span>         \r\n                  <img src={logoIcon} alt=\"Logo\" className=\"logo-icon\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"light\">LIGHT</span>\r\n              </span>\r\n            </a>\r\n          </div>\r\n\r\n          <nav className=\"nav-links right\">\r\n            <Link to=\"/EventPage\" state={{ currentSong: currentSong, currentSongIndex: currentSongIndex }}>\r\n              <img src={eventsIcon} alt=\"Events\" className=\"nav-icon\" />\r\n              <span>Events</span>\r\n            </Link>\r\n            <Link to=\"/StorePage\" state={{ currentSong: currentSong, currentSongIndex: currentSongIndex }}>\r\n              <img src={storeIcon} alt=\"Store\" className=\"nav-icon\" />\r\n              <span>Store</span>\r\n            </Link>\r\n          </nav>\r\n          \r\n          {/* Song List Sidebar */}\r\n          <div className={`sidebar ${isSongListOpen ? 'open' : ''}`} style={{ backgroundImage: `url(${bgSidebarImage})` }}>\r\n            <div className=\"search-bar-container\">\r\n              <form className=\"search-form\" onSubmit={handleSearchSubmit}>\r\n                <label htmlFor=\"search\" className=\"screen-reader-text\">Search</label>\r\n                <input\r\n                  type=\"search\"\r\n                  id=\"search\"\r\n                  placeholder=\"Search songs...\"\r\n                  value={searchQuery}\r\n                  onChange={handleSearchChange}\r\n                  className=\"search-field\"\r\n                />\r\n                <button type=\"submit\" className=\"search-submit\">\r\n                  <FaSearch className=\"search-bar-icon\" />\r\n                </button>\r\n              </form>\r\n            </div>\r\n            <ul>\r\n              {filteredSongs.map((song, index) => (\r\n                <li key={index} className=\"song-item\" onClick={() => setCurrentSongIndex(index)}>\r\n                  <div className=\"song-info-sidebar\">\r\n                    <img src={songSidebarIcon} alt=\"Song Sidebar Icon\" className=\"song-sidebar-icon\" />\r\n                    <span className=\"sidebar-song\">\r\n                      {song.title}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"song-bg\" style={{ backgroundImage: `url(${song.backgroundUrl})` }}></div>\r\n                  <span className=\"sidebar-song-title\">\r\n                    {song.title}\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"leave-button\">\r\n            <img src={leaveIcon} alt=\"Leave\" className=\"leave-icon\" style={{ width: '26p</button>x', height: '26px' }} onClick={handleLeaveClick} /> \r\n          </div>\r\n        </header>\r\n\r\n        {/* Current Page Content */}\r\n        <div className=\"content-layer\">\r\n          {/* Background Image */}\r\n          <div className=\"background-image\">\r\n            <img src={currentSong && currentSong.backgroundUrl ? `${currentSong.backgroundUrl}` : ''} alt=\"Background\" />\r\n          </div>\r\n          \r\n          {/* Content and Buttons */}\r\n          <div className=\"song-content\">\r\n            {/* User Profile */}\r\n            <div className=\"user-profile\">\r\n              <table>\r\n                <tr>\r\n                  <td>\r\n                    <div className=\"user-name\">{userProfile.name }</div>\r\n                    <div className=\"user-id\">ID: {userProfile.id }</div>\r\n                  </td>\r\n                  <td>\r\n                    <Link to=\"/ProfilePage\">\r\n                      <img src={userProfile.profilePic || profilePicPlaceholder} alt=\"Profile\" className=\"profile-img\" />\r\n                    </Link>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n\r\n            {/* Next/Previous Buttons */}\r\n            <div className=\"song-navigation\">\r\n              <button className=\"nav-btn prev-btn\" onClick={handlePreviousSong}>\r\n                <img src={previousArrow} alt=\"Previous\" style={{ width: '21px', height: '21px' }} />\r\n              </button>\r\n              <button className=\"nav-btn next-btn\" onClick={handleNextSong}>\r\n                <img src={nextArrow} alt=\"Next\" style={{ width: '21px', height: '21px' }} />\r\n              </button>\r\n            </div>\r\n\r\n            {/* Song Container */}\r\n            <div className=\"song-container\">\r\n              <div className=\"song-identity\">\r\n                <div className=\"difficulty-text\">Song level</div>\r\n                <div className=\"difficulty-value\">{currentSong?.difficulty}</div>\r\n              </div>\r\n              <div className=\"song-info\">\r\n                <div className=\"song-name\">{currentSong?.title }</div>\r\n                <div className=\"artist-name\">- {currentSong?.artist } -</div>\r\n                <button className=\"best-score-btn\">Best Score</button>\r\n              </div>\r\n              <div className=\"play-button-container\">\r\n                <button className=\"play-button\" onClick={handlePlayButtonClick}>\r\n                  <div className=\"play-icon-container\">\r\n                    <span className=\"play-icon\">▶</span>\r\n                  </div>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {showPopup && (\r\n          <div className=\"popup-overlay\">\r\n            <div className=\"popup-content\">\r\n              <h2>Confirm Leave</h2>\r\n              <p>Are you sure you want to leave the game?</p>\r\n              <button className=\"stay-button\" onClick={handleCancelLeave}>Stay</button>\r\n              <button className=\"leave-button\" onClick={handleConfirmLeave}>Leave</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Unity unityProvider={unityProvider} />\r\n      {isGameOver === true && (\r\n        <p>{`Game Over ${userName}! You've scored ${score} points.`}</p>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default SongPage;\r\n"],"names":["LandingPage","lazy","HistoryPage","EventPage","StorePage","ProfilePage","GameApp","rootUrl","SongPage","isSongListOpen","setIsSongListOpen","useState","userProfile","setUserProfile","songs","setSongs","currentSongIndex","setCurrentSongIndex","showPopup","setShowPopup","isGameOver","setIsGameOver","userName","setUserName","score","setScore","searchQuery","setSearchQuery","fuse","Fuse","keys","threshold","filteredSongs","search","map","result","item","unityProvider","sendMessage","addEventListener","removeEventListener","useUnityContext","loaderUrl","dataUrl","frameworkUrl","codeUrl","navigate","useNavigate","handleGameOver","useCallback","useEffect","async","userResponse","axios","get","headers","withCredentials","status","userData","data","id","name","profilePic","avatar","profilePicPlaceholder","console","error","statusText","songsResponse","fetchedSongs","length","fetchData","handleNextSong","imgElement","document","querySelector","classList","add","prevIndex","remove","once","handlePreviousSong","handleLeaveClick","currentSong","audio","audioUrl","Audio","loop","play","catch","pause","triggerButtonHoverEffect","buttonClass","button","setTimeout","handleKeyDown","event","keyCode","window","preventDefault","_jsxs","Fragment","children","_jsx","Suspense","fallback","Routes","Route","path","element","songId","className","onClick","toggleSongList","Link","to","src","songsIcon","alt","state","historyIcon","href","logoIcon","style","verticalAlign","eventsIcon","storeIcon","backgroundImage","bgSidebarImage","onSubmit","htmlFor","type","placeholder","value","onChange","target","FaSearch","song","index","songSidebarIcon","title","backgroundUrl","leaveIcon","width","height","previousArrow","nextArrow","difficulty","artist","post","handleCancelLeave","handleConfirmLeave","location","Unity"],"sourceRoot":""}