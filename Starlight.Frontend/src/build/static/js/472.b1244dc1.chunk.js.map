{"version":3,"file":"static/js/472.b1244dc1.chunk.js","mappings":"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","sources":["HistoryPage.js","SongPage.js","utils.js"],"sourcesContent":["import React, { useState, useEffect, lazy, Suspense, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport './Main_Menu_Style.css';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport logoIcon from './assets/Starlight-logo.png'; // Logo image\r\nimport leaveIcon from './assets/Header_Items/Leave-icon.png'; // Leave icon\r\nimport songsIcon from './assets/Header_Items/songs-icon.png'; // Songs icon\r\nimport historyIcon from './assets/Header_Items/history-icon.png'; // History icon\r\nimport eventsIcon from './assets/Header_Items/events-icon.png'; // Events icon\r\nimport storeIcon from './assets/Header_Items/store-icon.png'; // Store icon\r\nimport bgSidebarImage from './assets/Collapsed_Sidebar/sidebar-bg.png'; // Sidebar background\r\nimport songSidebarIcon from './assets/Collapsed_Sidebar/Song-sidebar-icon.png'; // Song icon for sidebar\r\nimport previousArrow from './assets/previousArrow.png'; // Previous button arrow\r\nimport nextArrow from './assets/nextArrow.png'; // Next button arrow\r\nimport './Heatmap_Style.css'; // Custom styles for the heatmap\r\nimport Fuse from 'fuse.js';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport * as d3 from 'd3';\r\nimport 'd3-scale-chromatic';\r\n\r\nconst rootUrl = \"https://cluster1.swyrin.id.vn\";\r\n\r\nconst LandingPage = lazy(() => import('./LandingPageApp'));\r\nconst EventPage = lazy(() => import('./EventPage'));\r\nconst StorePage = lazy(() => import('./StorePage'));\r\nconst ProfilePage = lazy(() => import('./ProfilePage'));\r\n\r\nfunction HistoryPage() {\r\n  const location = useLocation();\r\n  const currentSongFromLocation = location.state?.currentSong || null;\r\n  const currentSongIndexFromLocation = location.state?.currentSongIndex || 0;\r\n  const [currentSong, setCurrentSong] = useState(currentSongFromLocation);\r\n  const [currentSongIndex, setCurrentSongIndex] = useState(currentSongIndexFromLocation);\r\n  const [isSongListOpen, setIsSongListOpen] = useState(false);\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [songs, setSongs] = useState([]);\r\n  const [latestHeatmap, setLatestHeatmap] = useState(null);\r\n  const [bestHeatmap, setBestHeatmap] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const fuse = new Fuse(songs, { keys: ['title'], threshold: 0.3 });\r\n\r\n  const filteredSongs = searchQuery ? fuse.search(searchQuery).map(result => result.item) : songs;\r\n\r\n  const handleSearchChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  const handleSearchSubmit = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCurrentSong(currentSongFromLocation);\r\n    setCurrentSongIndex(currentSongIndexFromLocation);\r\n  }, [currentSongFromLocation, currentSongIndexFromLocation]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Fetch all songs data\r\n        const songsResponse = await axios.get(`${rootUrl}/api/track/all`, {\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        const fetchedSongs = songsResponse.data;\r\n        setSongs(fetchedSongs);\r\n        if (fetchedSongs.length > 0) {\r\n          setCurrentSongIndex(0);\r\n          setCurrentSong(fetchedSongs[0]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentSongIndex >= songs.length) {\r\n      setCurrentSongIndex(0);\r\n    }\r\n  }, [currentSongIndex, songs.length]);\r\n\r\n  const toggleSongList = () => {\r\n    setIsSongListOpen(!isSongListOpen);\r\n  };\r\n\r\n  const handleNextSong = useCallback(() => {\r\n    const imgElement = document.querySelector('.background-image img');\r\n    if (imgElement) {\r\n      imgElement.classList.add('fade-out');\r\n      imgElement.addEventListener('transitionend', () => {\r\n        setCurrentSongIndex((prevIndex) => {\r\n          const newIndex = (prevIndex + 1) % songs.length;\r\n          setCurrentSong(songs[newIndex]);\r\n          return newIndex;\r\n        });\r\n        imgElement.classList.remove('fade-out');\r\n      }, { once: true });\r\n    }\r\n  }, [songs]);\r\n\r\n  const handlePreviousSong = useCallback(() => {\r\n    const imgElement = document.querySelector('.background-image img');\r\n    if (imgElement) {\r\n      imgElement.classList.add('fade-out');\r\n      imgElement.addEventListener('transitionend', () => {\r\n        setCurrentSongIndex((prevIndex) => {\r\n          const newIndex = (prevIndex - 1 + songs.length) % songs.length;\r\n          setCurrentSong(songs[newIndex]);\r\n          return newIndex;\r\n        });\r\n        imgElement.classList.remove('fade-out');\r\n      }, { once: true });\r\n    }\r\n  }, [songs]);\r\n\r\n  const handleLeaveClick = () => {\r\n    setShowPopup(true);\r\n  };\r\n\r\n  const handleConfirmLeave = () => {\r\n    window.location.href = '/';\r\n  };\r\n\r\n  const handleCancelLeave = () => {\r\n    setShowPopup(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let audio;\r\n    const playAudio = () => {\r\n      if (currentSong && currentSong.audioUrl) {\r\n        audio = new Audio(currentSong.audioUrl);\r\n        audio.loop = true; // Set audio to auto-replay\r\n        audio.play().catch(error => console.error('Error playing audio:', error));\r\n      }\r\n    };\r\n\r\n    playAudio(); // Play audio immediately on page load\r\n\r\n    return () => {\r\n      if (audio) {\r\n        audio.pause();\r\n        audio = null;\r\n      }\r\n    };\r\n  }, [currentSong]);\r\n\r\n  useEffect(() => {\r\n    const imgElement = document.querySelector('.background-image img');\r\n    if (imgElement) {\r\n      imgElement.addEventListener('transitionend', () => {\r\n        imgElement.classList.remove('morph');\r\n      });\r\n    }\r\n  }, [currentSong]);\r\n\r\n  const triggerButtonHoverEffect = (buttonClass) => {\r\n    const button = document.querySelector(buttonClass);\r\n    if (button) {\r\n      button.classList.add('hover');\r\n      setTimeout(() => {\r\n        button.classList.remove('hover');\r\n      }, 300); // Duration of the hover effect\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if (event.keyCode === 39) { // Right arrow key\r\n        handleNextSong();\r\n        triggerButtonHoverEffect('.next-btn');\r\n      } else if (event.keyCode === 37) { // Left arrow key\r\n        handlePreviousSong();\r\n        triggerButtonHoverEffect('.prev-btn');\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [handleNextSong, handlePreviousSong]);\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if (event.keyCode === 27) { // Esc key\r\n        event.preventDefault(); // Prevent exiting fullscreen\r\n        handleLeaveClick();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  const fetchHeatmapData = async (url) => {\r\n    try {\r\n      const response = await axios.get(`${rootUrl}${url}`);\r\n      const data = response.data;\r\n  \r\n      // Validate the response and structure (adjust this as per your API's response format)\r\n      if (Array.isArray(data)) {\r\n        return { data, isFallback: false };\r\n      } else {\r\n        throw new Error('Invalid API response');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching heatmap data:', error);\r\n  \r\n      // Generate random fallback data\r\n      const randomData = [];\r\n      const groups = Array.from({ length: 30 }, (_, i) => `Group ${i + 1}`);\r\n      const variables = ['A', 'B', 'C', 'D', 'E'];\r\n  \r\n      for (let i = 0; i < groups.length; i++) {\r\n        for (let j = 0; j < variables.length; j++) {\r\n          randomData.push({\r\n            group: groups[i],\r\n            variable: variables[j],\r\n            value: Math.floor(Math.random() * 100),\r\n          });\r\n        }\r\n      }\r\n  \r\n      return { data: randomData, isFallback: true };\r\n    }\r\n  };\r\n  \r\n  const renderHeatmap = useCallback(async (url, selector) => {\r\n    const container = document.querySelector(selector);\r\n    if (!container) {\r\n      console.error(`Container with selector \"${selector}\" not found.`);\r\n      return;\r\n    }\r\n  \r\n    // Clear existing content\r\n    container.innerHTML = \"\";\r\n  \r\n    // Fetch data for the heatmap\r\n    const { data, isFallback } = await fetchHeatmapData(url);\r\n  \r\n    // Dimensions and margins\r\n    const margin = { top: 50, right: 25, bottom: 50, left: 50 }; // Adjusted margins\r\n    const width = 900 - margin.left - margin.right; // Adjusted width\r\n    const height = 300 - margin.top - margin.bottom; // Adjusted height\r\n  \r\n    // Append the SVG\r\n    const svg = d3\r\n      .select(container)\r\n      .append(\"svg\")\r\n      .attr(\"width\", width + margin.left + margin.right)\r\n      .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n  \r\n    // Scales\r\n    const myGroups = Array.from(new Set(data.map((d) => d.group)));\r\n    const myVars = Array.from(new Set(data.map((d) => d.variable)));\r\n  \r\n    const x = d3.scaleBand().range([0, width]).domain(myGroups).padding(0.2); // Adjusted padding\r\n    const y = d3.scaleBand().range([height, 0]).domain(myVars).padding(0.2); // Adjusted padding\r\n  \r\n    const myColor = d3.scaleSequential().interpolator(d3.interpolateInferno).domain([0, 100]);\r\n  \r\n    // Add axes\r\n    svg\r\n      .append(\"g\")\r\n      .style(\"font-size\", 15)\r\n      .attr(\"transform\", `translate(0,${height})`)\r\n      .call(d3.axisBottom(x).tickSize(0))\r\n      .select(\".domain\")\r\n      .remove();\r\n  \r\n    svg\r\n      .append(\"g\")\r\n      .style(\"font-size\", 15)\r\n      .call(d3.axisLeft(y).tickSize(0))\r\n      .select(\".domain\")\r\n      .remove();\r\n  \r\n    // Tooltip\r\n    const tooltip = d3\r\n      .select(container)\r\n      .append(\"div\")\r\n      .style(\"opacity\", 0)\r\n      .attr(\"class\", \"tooltip\")\r\n      .style(\"background-color\", \"white\")\r\n      .style(\"border\", \"solid\")\r\n      .style(\"border-width\", \"2px\")\r\n      .style(\"border-radius\", \"5px\")\r\n      .style(\"padding\", \"5px\");\r\n  \r\n    const mouseover = function (event, d) {\r\n      tooltip.style(\"opacity\", 1);\r\n      d3.select(this).style(\"stroke\", \"black\").style(\"opacity\", 1);\r\n    };\r\n  \r\n    const mousemove = function (event, d) {\r\n      tooltip\r\n        .html(`Beat Accuracy: ${d.value || 0}%`)\r\n        .style(\"left\", `${event.pageX + 20}px`)\r\n        .style(\"top\", `${event.pageY - 20}px`);\r\n    };\r\n  \r\n    const mouseleave = function () {\r\n      tooltip.style(\"opacity\", 0);\r\n      d3.select(this).style(\"stroke\", \"none\").style(\"opacity\", 0.8);\r\n    };\r\n  \r\n    // Draw rectangles\r\n    svg\r\n      .selectAll()\r\n      .data(data, (d) => `${d.group}:${d.variable}`)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", (d) => x(d.group))\r\n      .attr(\"y\", (d) => y(d.variable))\r\n      .attr(\"rx\", 4)\r\n      .attr(\"ry\", 4)\r\n      .attr(\"width\", x.bandwidth()) // Adjusted cell width\r\n      .attr(\"height\", y.bandwidth()) // Adjusted cell height\r\n      .style(\"fill\", (d) => myColor(d.value || 0))\r\n      .style(\"stroke-width\", 4)\r\n      .style(\"stroke\", \"none\")\r\n      .style(\"opacity\", 0.8)\r\n      .on(\"mouseover\", mouseover)\r\n      .on(\"mousemove\", mousemove)\r\n      .on(\"mouseleave\", mouseleave);\r\n  \r\n    if (isFallback) {\r\n      svg.append(\"text\")\r\n        .attr(\"x\", width / 2)\r\n        .attr(\"y\", height + margin.bottom + 20)\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .style(\"font-size\", \"12px\")\r\n        .style(\"fill\", \"red\")\r\n        .text(\"Data fetched from fallback random data\");\r\n    }\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    const renderHeatmap1 = async () => {\r\n      await renderHeatmap('/api/score/recent', \"#heatmap-container-1\");\r\n    };\r\n    renderHeatmap1();\r\n  }, [renderHeatmap]);\r\n  \r\n  useEffect(() => {\r\n    const renderHeatmap2 = async () => {\r\n      await renderHeatmap(`/api/score/${currentSong?.id}`, \"#heatmap-container-2\");\r\n    };\r\n    renderHeatmap2();\r\n  }, [renderHeatmap, currentSong]);\r\n  \r\n  return (\r\n    <div className=\"historypage\">\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        {/* Header Navigation Bar */}\r\n        <header className=\"navbar\">\r\n          <div id=\"nav-icon1\" className={isSongListOpen ? 'open' : ''} onClick={toggleSongList}>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n\r\n          <nav className=\"nav-links left\">\r\n            <Link to=\"/songpage\">\r\n              <img src={songsIcon} alt=\"Songs\" className=\"nav-icon\" />\r\n              <span>Songs</span>\r\n            </Link>\r\n            <Link to=\"/historypage\">\r\n              <img src={historyIcon} alt=\"History\" className=\"nav-icon\" />\r\n              <span>History</span>\r\n            </Link>\r\n          </nav>\r\n\r\n          {/* Center Curved Logo */}\r\n          <div className=\"logo-container\">\r\n            <Link to=\"/songpage\" className=\"logo\">\r\n              <span className=\"star-light\">\r\n                <span>STAR</span>\r\n                <img src={logoIcon} alt=\"Logo\" className=\"logo-icon\" style={{ verticalAlign: 'middle' }} />\r\n                <span className=\"light\">LIGHT</span>\r\n              </span>\r\n            </Link>\r\n          </div>\r\n\r\n          <nav className=\"nav-links right\">\r\n            <Link to=\"/eventpage\" state={{ currentSong: currentSong, currentSongIndex: currentSongIndex }}>\r\n              <img src={eventsIcon} alt=\"Events\" className=\"nav-icon\" />\r\n              <span>Events</span>\r\n            </Link>\r\n            <Link to=\"/storepage\" state={{ currentSong: currentSong, currentSongIndex: currentSongIndex }}>\r\n              <img src={storeIcon} alt=\"Store\" className=\"nav-icon\" />\r\n              <span>Store</span>\r\n            </Link>\r\n          </nav>\r\n\r\n          {/* Song List Sidebar */}\r\n          <div className={`sidebar ${isSongListOpen ? 'open' : ''}`} style={{ backgroundImage: `url(${bgSidebarImage})` }}>\r\n            <div className=\"search-bar-container\">\r\n              <form className=\"search-form\" onSubmit={handleSearchSubmit}>\r\n                <label htmlFor=\"search\" className=\"screen-reader-text\">Search</label>\r\n                <input\r\n                  type=\"search\"\r\n                  id=\"search\"\r\n                  placeholder=\"Search songs...\"\r\n                  value={searchQuery}\r\n                  onChange={handleSearchChange}\r\n                  className=\"search-field\"\r\n                />\r\n                <button type=\"submit\" className=\"search-submit\">\r\n                  <FaSearch className=\"search-bar-icon\" />\r\n                </button>\r\n              </form>\r\n            </div>\r\n            <ul>\r\n              {filteredSongs.map((song, index) => (\r\n                <li key={index} className=\"song-item\" onClick={() => setCurrentSong(song)}>\r\n                  <div className=\"song-info-sidebar\">\r\n                    <img src={songSidebarIcon} alt=\"Song Sidebar Icon\" className=\"song-sidebar-icon\" />\r\n                    <span className=\"sidebar-song\">\r\n                      {song.title}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"song-bg\" style={{ backgroundImage: `url(${song.backgroundUrl})` }}></div>\r\n                  <span className=\"sidebar-song-title\">\r\n                    {song.title}\r\n                  </span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          \r\n          <div className=\"leave-button\">\r\n            <img src={leaveIcon} alt=\"Leave\" className=\"leave-icon\" style={{ width: '26px', height: '26px' }} onClick={handleLeaveClick} />\r\n          </div>\r\n        </header>\r\n\r\n        {/* Current Page Content */}\r\n        <div className=\"content-layer\">\r\n          {/* Background Image */}\r\n          <div className=\"background-image\">\r\n            <img src={currentSong && currentSong.backgroundUrl ? `${currentSong.backgroundUrl}` : ''} alt=\"Background\" />\r\n          </div>\r\n\r\n          {/* Next/Previous Buttons */}\r\n          <div className=\"song-navigation\">\r\n            <button className=\"nav-btn prev-btn\" onClick={handlePreviousSong}>\r\n              <img src={previousArrow} alt=\"Previous\" style={{ width: '21px', height: '21px' }} />\r\n            </button>\r\n            <button className=\"nav-btn next-btn\" onClick={handleNextSong}>\r\n              <img src={nextArrow} alt=\"Next\" style={{ width: '21px', height: '21px' }} />\r\n            </button>\r\n          </div>\r\n\r\n          {/* Render Heatmaps */}\r\n          <div id=\"heatmap-container-1\" className=\"heatmap-container\"></div>\r\n          <div id=\"heatmap-container-2\" className=\"heatmap-container\"></div>\r\n          \r\n        </div>\r\n\r\n        {showPopup && (\r\n          <div className=\"popup-overlay\">\r\n            <div className=\"popup-content\">\r\n              <h2>Confirm Leave</h2>\r\n              <p>Are you sure you want to leave the game?</p>\r\n              <button className=\"stay-button\" onClick={handleCancelLeave}>Stay</button>\r\n              <button className=\"leave-button\" onClick={handleConfirmLeave}>Leave</button>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Suspense>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HistoryPage;\r\n","import React, { useState, useEffect, useCallback, Fragment, lazy, Suspense } from 'react';\nimport axios from 'axios';\nimport './Main_Menu_Style.css';\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport { Unity, useUnityContext } from \"react-unity-webgl\";\nimport profilePicPlaceholder from './assets/profile.png'; // Placeholder for profile image\nimport logoIcon from './assets/Starlight-logo.png'; // Logo image\nimport leaveIcon from './assets/Header_Items/Leave-icon.png'; // Leave icon\nimport songsIcon from './assets/Header_Items/songs-icon.png'; // Songs icon\nimport historyIcon from './assets/Header_Items/history-icon.png'; // History icon\nimport eventsIcon from './assets/Header_Items/events-icon.png'; // Events icon\nimport storeIcon from './assets/Header_Items/store-icon.png'; // Store icon\nimport previousArrow from './assets/previousArrow.png'; // Previous button arrow\nimport nextArrow from './assets/nextArrow.png'; // Next button arrow\nimport bgSidebarImage from './assets/Collapsed_Sidebar/sidebar-bg.png'; // Sidebar background\nimport songSidebarIcon from './assets/Collapsed_Sidebar/Song-sidebar-icon.png'; // Song icon for sidebar\nimport Fuse from 'fuse.js';\nimport { FaSearch } from 'react-icons/fa';\nimport {requestFullScreen} from \"./utils\";\n\nconst LandingPage = lazy(() => import('./LandingPageApp'));\nconst HistoryPage = lazy(() => import('./HistoryPage'));\nconst EventPage = lazy(() => import('./EventPage'));\nconst StorePage = lazy(() => import('./StorePage'));\nconst ProfilePage = lazy(() => import('./ProfilePage'));\nconst GameApp = lazy(() => import('./game/GameApp'));\n\nconst rootUrl = \"https://cluster1.swyrin.id.vn\";\n\nfunction SongPage() {\n  const [isSongListOpen, setIsSongListOpen] = useState(false);\n  const [userProfile, setUserProfile] = useState({});\n  const [songs, setSongs] = useState([]);\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const [showPopup, setShowPopup] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [userName, setUserName] = useState();\n  const [score, setScore] = useState();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [bestScore, setBestScore] = useState(null);\n\n  const fuse = new Fuse(songs, { keys: ['title'], threshold: 0.3 });\n\n  const filteredSongs = searchQuery ? fuse.search(searchQuery).map(result => result.item) : songs;\n\n  const handleSearchChange = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSearchSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  const { unityProvider, sendMessage, addEventListener, removeEventListener } = useUnityContext({\n    loaderUrl: \"build/myunityapp.loader.js\",\n    dataUrl: \"build/myunityapp.data\",\n    frameworkUrl: \"build/myunityapp.framework.js\",\n    codeUrl: \"build/myunityapp.wasm\",\n  });\n\n  const navigate = useNavigate();\n\n  const handleGameOver = useCallback((userName, score) => {\n    setIsGameOver(true);\n    setUserName(userName);\n    setScore(score);\n  }, []);\n\n  useEffect(() => {\n    addEventListener(\"GameOver\", handleGameOver);\n    return () => {\n      removeEventListener(\"GameOver\", handleGameOver);\n    };\n  }, [addEventListener, removeEventListener, handleGameOver]);\n\n  // Fetch user profile and song list data from the backend\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch user ID and username\n        const userResponse = await axios.get(`${rootUrl}/api/user`, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (userResponse.status === 200) {\n          const userData = userResponse.data;\n          setUserProfile({\n            id: userData.id || 123456,\n            name: userData.name || 'Sanraku',\n            profilePic: userData.avatar || profilePicPlaceholder\n          });\n        } else {\n          console.error('Error fetching user data:', userResponse.statusText);\n        }\n\n        // Fetch all songs data\n        const songsResponse = await axios.get(`${rootUrl}/api/track/all`, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (songsResponse.status === 200) {\n          const fetchedSongs = songsResponse.data;\n          setSongs(fetchedSongs);\n          if (fetchedSongs.length > 0) {\n            setCurrentSongIndex(0);\n          }\n        } else {\n          console.error('Error fetching songs data:', songsResponse.statusText);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    \n    fetchData();\n  }, []);\n\n  /*useEffect(() => {\n    const fetchBestScore = async () => {\n      if (currentSong) {\n        try {\n          const response = await axios.get(`${rootUrl}/api/user/score/${currentSong.id}`, {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            withCredentials: true\n          });\n          if (response.status === 200) {\n            setBestScore(response.data.bestScore);\n          } else {\n            console.error('Error fetching best score:', response.statusText);\n          }\n        } catch (error) {\n          console.error('Error fetching best score:', error);\n        }\n      }\n    };\n\n    fetchBestScore();\n  }, [currentSong]);\n*/\n  const toggleSongList = () => {\n    setIsSongListOpen(!isSongListOpen);\n  };\n\n  const handleNextSong = useCallback(() => {\n    const imgElement = document.querySelector('.background-image img');\n    if (imgElement) {\n      imgElement.classList.add('fade-out');\n      imgElement.addEventListener('transitionend', () => {\n        setCurrentSongIndex((prevIndex) => (prevIndex + 1) % songs.length);\n        imgElement.classList.remove('fade-out');\n      }, { once: true });\n    }\n  }, [songs]);\n\n  const handlePreviousSong = useCallback(() => {\n    const imgElement = document.querySelector('.background-image img');\n    if (imgElement) {\n      imgElement.classList.add('fade-out');\n      imgElement.addEventListener('transitionend', () => {\n        setCurrentSongIndex((prevIndex) => (prevIndex - 1 + songs.length) % songs.length);\n        imgElement.classList.remove('fade-out');\n      }, { once: true });\n    }\n  }, [songs]);\n\n  const handlePlayButtonClick = async () => {\n    const currentSong = songs[currentSongIndex];\n    if (currentSong) {\n      try {\n        await axios.post(`${rootUrl}/api/game/start`, { songId: currentSong.id }, {withCredentials: true});\n        requestFullScreen();\n        navigate(`/TestGame`, { state: { songId: currentSong.id } });\n      } catch (error) {\n        console.error('Error starting game:', error);\n      }\n    }\n  };\n\n  const handleLeaveClick = () => {\n    setShowPopup(true);\n  };\n\n  const handleConfirmLeave = () => {\n    window.location.href = '/';\n  };\n\n  const handleCancelLeave = () => {\n    setShowPopup(false);\n  };\n\n  const currentSong = songs[currentSongIndex];\n\n  useEffect(() => {\n    let audio;\n    const playAudio = () => {\n      if (currentSong && currentSong.audioUrl) {\n        audio = new Audio(currentSong.audioUrl);\n        audio.loop = true; // Set audio to auto-replay\n        audio.play().catch(error => console.error('Error playing audio:', error));\n      }\n    };\n\n    playAudio(); // Play audio immediately on page load\n\n    return () => {\n      if (audio) {\n        audio.pause();\n        audio = null;\n      }\n    };\n  }, [currentSong]);\n\n  useEffect(() => {\n    const imgElement = document.querySelector('.background-image img');\n    if (imgElement) {\n      imgElement.addEventListener('transitionend', () => {\n        imgElement.classList.remove('morph');\n      });\n    }\n  }, [currentSong]);\n\n  const triggerButtonHoverEffect = (buttonClass) => {\n    const button = document.querySelector(buttonClass);\n    if (button) {\n      button.classList.add('hover');\n      setTimeout(() => {\n        button.classList.remove('hover');\n      }, 300); // Duration of the hover effect\n    }\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.keyCode === 39) { // Right arrow key\n        handleNextSong();\n        triggerButtonHoverEffect('.next-btn');\n      } else if (event.keyCode === 37) { // Left arrow key\n        handlePreviousSong();\n        triggerButtonHoverEffect('.prev-btn');\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleNextSong, handlePreviousSong]);\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.keyCode === 27) { // Esc key\n        event.preventDefault(); // Prevent exiting fullscreen\n        handleLeaveClick();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  const handleSongClick = (song) => {\n    const index = songs.findIndex(s => s.id === song.id);\n    if (index !== -1) {\n      setCurrentSongIndex(index);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Routes>\n          <Route path=\"/SongPage\" element={<SongPage />} />\n          <Route path=\"/HistoryPage\" element={<HistoryPage />} />\n          <Route path=\"/EventPage\" element={<EventPage />} />\n          <Route path=\"/StorePage\" element={<StorePage />} />\n          <Route path=\"/Logout\" element={<LandingPage />} />\n          <Route path=\"/ProfilePage\" element={<ProfilePage />} />\n          <Route path=\"/TestGame\" element={<GameApp songId={currentSong?.id} />} />\n        </Routes>\n      </Suspense>\n      <div className=\"songpage\">\n        {/* Header Navigation Bar */}\n        <header className=\"navbar\">\n          <div id=\"nav-icon1\" className={isSongListOpen ? 'open' : ''} onClick={toggleSongList}>\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n          \n          <nav className=\"nav-links left\">\n            <Link to=\"/SongPage\">\n              <img src={songsIcon} alt=\"Songs\" className=\"nav-icon\" />\n              <span>Songs</span>\n            </Link>\n            <Link to=\"/HistoryPage\" state={{ currentSong: currentSong, currentSongIndex: currentSongIndex }}>\n              <img src={historyIcon} alt=\"History\" className=\"nav-icon\" />\n              <span>History</span>\n            </Link>\n          </nav>\n\n          {/* Center Curved Logo */}\n          <div className=\"logo-container\">\n            <a href=\"/SongPage\" className=\"logo\">\n              <span className=\"star-light\">\n                <span>STAR</span>         \n                  <img src={logoIcon} alt=\"Logo\" className=\"logo-icon\" style={{ verticalAlign: 'middle' }} />\n                <span className=\"light\">LIGHT</span>\n              </span>\n            </a>\n          </div>\n\n          <nav className=\"nav-links right\">\n            <Link to=\"/EventPage\" state={{ currentSong: currentSong, currentSongIndex: currentSongIndex }}>\n              <img src={eventsIcon} alt=\"Events\" className=\"nav-icon\" />\n              <span>Events</span>\n            </Link>\n            <Link to=\"/StorePage\" state={{ currentSong: currentSong, currentSongIndex: currentSongIndex }}>\n              <img src={storeIcon} alt=\"Store\" className=\"nav-icon\" />\n              <span>Store</span>\n            </Link>\n          </nav>\n          \n          {/* Song List Sidebar */}\n          <div className={`sidebar ${isSongListOpen ? 'open' : ''}`} style={{ backgroundImage: `url(${bgSidebarImage})` }}>\n            <div className=\"search-bar-container\">\n              <form className=\"search-form\" onSubmit={handleSearchSubmit}>\n                <label htmlFor=\"search\" className=\"screen-reader-text\">Search</label>\n                <input\n                  type=\"search\"\n                  id=\"search\"\n                  placeholder=\"Search songs...\"\n                  value={searchQuery}\n                  onChange={handleSearchChange}\n                  className=\"search-field\"\n                />\n                <button type=\"submit\" className=\"search-submit\">\n                  <FaSearch className=\"search-bar-icon\" />\n                </button>\n              </form>\n            </div>\n            <ul>\n              {filteredSongs.map((song, index) => (\n                <li key={index} className=\"song-item\" onClick={() => handleSongClick(song)}>\n                  <div className=\"song-info-sidebar\">\n                    <img src={songSidebarIcon} alt=\"Song Sidebar Icon\" className=\"song-sidebar-icon\" />\n                    <span className=\"sidebar-song\">\n                      {song.title}\n                    </span>\n                  </div>\n                  <div className=\"song-bg\" style={{ backgroundImage: `url(${song.backgroundUrl})` }}></div>\n                  <span className=\"sidebar-song-title\">\n                    {song.title}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div className=\"leave-button\">\n            <img src={leaveIcon} alt=\"Leave\" className=\"leave-icon\" style={{ width: '26p</button>x', height: '26px' }} onClick={handleLeaveClick} /> \n          </div>\n        </header>\n\n        {/* Current Page Content */}\n        <div className=\"content-layer\">\n          {/* Background Image */}\n          <div className=\"background-image\">\n            <img src={currentSong && currentSong.backgroundUrl ? `${currentSong.backgroundUrl}` : ''} alt=\"Background\" />\n          </div>\n          \n          {/* Content and Buttons */}\n          <div className=\"song-content\">\n            {/* User Profile */}\n            <div className=\"user-profile\">\n              <table>\n                <tr>\n                  <td>\n                    <div className=\"user-name\">{userProfile.name }</div>\n                    <div className=\"user-id\">ID: {userProfile.id }</div>\n                  </td>\n                  <td>\n                    <Link to=\"/ProfilePage\">\n                      <img src={userProfile.profilePic || profilePicPlaceholder} alt=\"Profile\" className=\"profile-img\" />\n                    </Link>\n                  </td>\n                </tr>\n              </table>\n            </div>\n\n            {/* Next/Previous Buttons */}\n            <div className=\"song-navigation\">\n              <button className=\"nav-btn prev-btn\" onClick={handlePreviousSong}>\n                <img src={previousArrow} alt=\"Previous\" style={{ width: '21px', height: '21px' }} />\n              </button>\n              <button className=\"nav-btn next-btn\" onClick={handleNextSong}>\n                <img src={nextArrow} alt=\"Next\" style={{ width: '21px', height: '21px' }} />\n              </button>\n            </div>\n\n            {/* Song Container */}\n            <div className=\"song-container\">\n              <div className=\"song-identity\">\n                <div className=\"difficulty-text\">Song level</div>\n                <div className=\"difficulty-value\">{currentSong?.difficulty}</div>\n              </div>\n              <div className=\"song-info\">\n                <div className=\"song-name\">{currentSong?.title }</div>\n                <div className=\"artist-name\">- {currentSong?.artist } -</div>\n                <div className=\"best-score\">Best Score{/*bestScore !== null ? bestScore : 'N/A'*/}</div>\n              </div>\n              <div className=\"play-button-container\">\n                <button className=\"play-button\" onClick={handlePlayButtonClick}>\n                  <div className=\"play-icon-container\">\n                    <span className=\"play-icon\">▶</span>\n                  </div>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        {showPopup && (\n          <div className=\"popup-overlay\">\n            <div className=\"popup-content\">\n              <h2>Confirm Leave</h2>\n              <p>Are you sure you want to leave the game?</p>\n              <button className=\"stay-button\" onClick={handleCancelLeave}>Stay</button>\n              <button className=\"leave-button\" onClick={handleConfirmLeave}>Leave</button>\n            </div>\n          </div>\n        )}\n      </div>\n      <Unity unityProvider={unityProvider} />\n      {isGameOver === true && (\n        <p>{`Game Over ${userName}! You've scored ${score} points.`}</p>\n      )}\n    </Fragment>\n  );\n}\n\nexport default SongPage;\n","/*\n Requests the browser for a fullscreen.\n This function requires **CONSCIOUS USER INTERACTION**, so\n please use this inside onClick/onChanged/whatever event.\n\n Yours truly,\n DUT.\n */\nexport const requestFullScreen = () => {\n    const elem = document.documentElement;\n    if (elem.requestFullscreen) {\n        elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) { // Firefox\n        elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) { // Chrome, Safari and Opera\n        elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) { // IE/Edge\n        elem.msRequestFullscreen();\n    }\n}\n"],"names":["rootUrl","_location$state","_location$state2","location","useLocation","currentSongFromLocation","state","currentSong","currentSongIndexFromLocation","currentSongIndex","setCurrentSong","useState","setCurrentSongIndex","isSongListOpen","setIsSongListOpen","showPopup","setShowPopup","songs","setSongs","latestHeatmap","setLatestHeatmap","bestHeatmap","setBestHeatmap","searchQuery","setSearchQuery","fuse","Fuse","keys","threshold","filteredSongs","search","map","result","item","useEffect","async","fetchedSongs","axios","get","headers","data","length","error","console","fetchData","handleNextSong","useCallback","imgElement","document","querySelector","classList","add","addEventListener","prevIndex","newIndex","remove","once","handlePreviousSong","handleLeaveClick","audio","audioUrl","Audio","loop","play","catch","pause","triggerButtonHoverEffect","buttonClass","button","setTimeout","handleKeyDown","event","keyCode","window","removeEventListener","preventDefault","renderHeatmap","url","selector","container","innerHTML","isFallback","Array","isArray","Error","randomData","groups","from","_","i","variables","j","push","group","variable","value","Math","floor","random","fetchHeatmapData","margin","width","height","svg","d3","append","attr","myGroups","Set","d","myVars","x","range","domain","padding","y","myColor","interpolator","style","call","tickSize","select","tooltip","selectAll","enter","bandwidth","on","this","html","pageX","pageY","text","renderHeatmap1","id","renderHeatmap2","_jsx","className","children","_jsxs","Suspense","fallback","onClick","toggleSongList","Link","to","src","songsIcon","alt","historyIcon","logoIcon","verticalAlign","eventsIcon","storeIcon","backgroundImage","bgSidebarImage","onSubmit","htmlFor","type","placeholder","onChange","target","FaSearch","song","index","songSidebarIcon","title","backgroundUrl","leaveIcon","previousArrow","nextArrow","handleCancelLeave","handleConfirmLeave","href","LandingPage","lazy","HistoryPage","EventPage","StorePage","ProfilePage","GameApp","SongPage","userProfile","setUserProfile","isGameOver","setIsGameOver","userName","setUserName","score","setScore","bestScore","setBestScore","unityProvider","sendMessage","useUnityContext","loaderUrl","dataUrl","frameworkUrl","codeUrl","navigate","useNavigate","handleGameOver","userResponse","withCredentials","status","userData","name","profilePic","avatar","profilePicPlaceholder","statusText","songsResponse","Fragment","Routes","Route","path","element","songId","findIndex","s","handleSongClick","difficulty","artist","post","requestFullScreen","Unity","elem","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen"],"sourceRoot":""}