{"version":3,"file":"static/js/91.7ce2eebd.chunk.js","mappings":"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","sources":["SongPage.js","utils.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, Fragment, lazy, Suspense } from 'react';\nimport axios from 'axios';\nimport './Main_Menu_Style.css';\nimport { Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport { Unity, useUnityContext } from \"react-unity-webgl\";\nimport profilePicPlaceholder from './assets/profile.png'; // Placeholder for profile image\nimport logoIcon from './assets/Starlight-logo.png'; // Logo image\nimport leaveIcon from './assets/Header_Items/Leave-icon.png'; // Leave icon\nimport songsIcon from './assets/Header_Items/songs-icon.png'; // Songs icon\nimport historyIcon from './assets/Header_Items/history-icon.png'; // History icon\nimport eventsIcon from './assets/Header_Items/events-icon.png'; // Events icon\nimport storeIcon from './assets/Header_Items/store-icon.png'; // Store icon\nimport previousArrow from './assets/previousArrow.png'; // Previous button arrow\nimport nextArrow from './assets/nextArrow.png'; // Next button arrow\nimport bgSidebarImage from './assets/Collapsed_Sidebar/sidebar-bg.png'; // Sidebar background\nimport songSidebarIcon from './assets/Collapsed_Sidebar/Song-sidebar-icon.png'; // Song icon for sidebar\nimport Fuse from 'fuse.js';\nimport { FaSearch } from 'react-icons/fa';\nimport {requestFullScreen} from \"./utils\";\n\nconst LandingPage = lazy(() => import('./LandingPageApp'));\nconst HistoryPage = lazy(() => import('./HistoryPage'));\nconst EventPage = lazy(() => import('./EventPage'));\nconst StorePage = lazy(() => import('./StorePage'));\nconst ProfilePage = lazy(() => import('./ProfilePage'));\nconst GameApp = lazy(() => import('./game/GameApp'));\n\nconst rootUrl = \"https://cluster1.swyrin.id.vn\";\n\nfunction SongPage() {\n  const [isSongListOpen, setIsSongListOpen] = useState(false);\n  const [userProfile, setUserProfile] = useState({});\n  const [songs, setSongs] = useState([]);\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  const [showPopup, setShowPopup] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [userName, setUserName] = useState();\n  const [score, setScore] = useState();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [bestScore, setBestScore] = useState(null);\n\n  const fuse = new Fuse(songs, { keys: ['title'], threshold: 0.3 });\n\n  const filteredSongs = searchQuery ? fuse.search(searchQuery).map(result => result.item) : songs;\n\n  const handleSearchChange = (event) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSearchSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  const { unityProvider, sendMessage, addEventListener, removeEventListener } = useUnityContext({\n    loaderUrl: \"build/myunityapp.loader.js\",\n    dataUrl: \"build/myunityapp.data\",\n    frameworkUrl: \"build/myunityapp.framework.js\",\n    codeUrl: \"build/myunityapp.wasm\",\n  });\n\n  const navigate = useNavigate();\n\n  const handleGameOver = useCallback((userName, score) => {\n    setIsGameOver(true);\n    setUserName(userName);\n    setScore(score);\n  }, []);\n\n  useEffect(() => {\n    addEventListener(\"GameOver\", handleGameOver);\n    return () => {\n      removeEventListener(\"GameOver\", handleGameOver);\n    };\n  }, [addEventListener, removeEventListener, handleGameOver]);\n\n  // Fetch user profile and song list data from the backend\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Fetch user ID and username\n        const userResponse = await axios.get(`${rootUrl}/api/user`, {\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          withCredentials: true\n        });\n        if (userResponse.status === 200) {\n          const userData = userResponse.data;\n          setUserProfile({\n            id: userData.id || 123456,\n            name: userData.name || 'Sanraku',\n            profilePic: userData.avatar || profilePicPlaceholder\n          });\n        } else {\n          console.error('Error fetching user data:', userResponse.statusText);\n        }\n\n        // Fetch all songs data\n        const songsResponse = await axios.get(`${rootUrl}/api/track/all`, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (songsResponse.status === 200) {\n          const fetchedSongs = songsResponse.data;\n          setSongs(fetchedSongs);\n          if (fetchedSongs.length > 0) {\n            setCurrentSongIndex(0);\n          }\n        } else {\n          console.error('Error fetching songs data:', songsResponse.statusText);\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    \n    fetchData();\n  }, []);\n\n  /*useEffect(() => {\n    const fetchBestScore = async () => {\n      if (currentSong) {\n        try {\n          const response = await axios.get(`${rootUrl}/api/user/score/${currentSong.id}`, {\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            withCredentials: true\n          });\n          if (response.status === 200) {\n            setBestScore(response.data.bestScore);\n          } else {\n            console.error('Error fetching best score:', response.statusText);\n          }\n        } catch (error) {\n          console.error('Error fetching best score:', error);\n        }\n      }\n    };\n\n    fetchBestScore();\n  }, [currentSong]);\n*/\n  const toggleSongList = () => {\n    setIsSongListOpen(!isSongListOpen);\n  };\n\n  const handleNextSong = useCallback(() => {\n    const imgElement = document.querySelector('.background-image img');\n    if (imgElement) {\n      imgElement.classList.add('fade-out');\n      imgElement.addEventListener('transitionend', () => {\n        setCurrentSongIndex((prevIndex) => (prevIndex + 1) % songs.length);\n        imgElement.classList.remove('fade-out');\n      }, { once: true });\n    }\n  }, [songs]);\n\n  const handlePreviousSong = useCallback(() => {\n    const imgElement = document.querySelector('.background-image img');\n    if (imgElement) {\n      imgElement.classList.add('fade-out');\n      imgElement.addEventListener('transitionend', () => {\n        setCurrentSongIndex((prevIndex) => (prevIndex - 1 + songs.length) % songs.length);\n        imgElement.classList.remove('fade-out');\n      }, { once: true });\n    }\n  }, [songs]);\n\n  const handlePlayButtonClick = async () => {\n    const currentSong = songs[currentSongIndex];\n    if (currentSong) {\n      try {\n        await axios.post(`${rootUrl}/api/game/start`, { songId: currentSong.id }, {withCredentials: true});\n        requestFullScreen();\n        navigate(`/TestGame`, { state: { songId: currentSong.id } });\n      } catch (error) {\n        console.error('Error starting game:', error);\n      }\n    }\n  };\n\n  const handleLeaveClick = () => {\n    setShowPopup(true);\n  };\n\n  const handleConfirmLeave = () => {\n    window.location.href = '/';\n  };\n\n  const handleCancelLeave = () => {\n    setShowPopup(false);\n  };\n\n  const currentSong = songs[currentSongIndex];\n\n  useEffect(() => {\n    let audio;\n    const playAudio = () => {\n      if (currentSong && currentSong.audioUrl) {\n        audio = new Audio(currentSong.audioUrl);\n        audio.loop = true; // Set audio to auto-replay\n        audio.play().catch(error => console.error('Error playing audio:', error));\n      }\n    };\n\n    playAudio(); // Play audio immediately on page load\n\n    return () => {\n      if (audio) {\n        audio.pause();\n        audio = null;\n      }\n    };\n  }, [currentSong]);\n\n  useEffect(() => {\n    const imgElement = document.querySelector('.background-image img');\n    if (imgElement) {\n      imgElement.addEventListener('transitionend', () => {\n        imgElement.classList.remove('morph');\n      });\n    }\n  }, [currentSong]);\n\n  const triggerButtonHoverEffect = (buttonClass) => {\n    const button = document.querySelector(buttonClass);\n    if (button) {\n      button.classList.add('hover');\n      setTimeout(() => {\n        button.classList.remove('hover');\n      }, 300); // Duration of the hover effect\n    }\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.keyCode === 39) { // Right arrow key\n        handleNextSong();\n        triggerButtonHoverEffect('.next-btn');\n      } else if (event.keyCode === 37) { // Left arrow key\n        handlePreviousSong();\n        triggerButtonHoverEffect('.prev-btn');\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleNextSong, handlePreviousSong]);\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.keyCode === 27) { // Esc key\n        event.preventDefault(); // Prevent exiting fullscreen\n        handleLeaveClick();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  const handleSongClick = (song) => {\n    const index = songs.findIndex(s => s.id === song.id);\n    if (index !== -1) {\n      setCurrentSongIndex(index);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Routes>\n          <Route path=\"/SongPage\" element={<SongPage />} />\n          <Route path=\"/HistoryPage\" element={<HistoryPage />} />\n          <Route path=\"/EventPage\" element={<EventPage />} />\n          <Route path=\"/StorePage\" element={<StorePage />} />\n          <Route path=\"/Logout\" element={<LandingPage />} />\n          <Route path=\"/ProfilePage\" element={<ProfilePage />} />\n          <Route path=\"/TestGame\" element={<GameApp songId={currentSong?.id} />} />\n        </Routes>\n      </Suspense>\n      <div className=\"songpage\">\n        {/* Header Navigation Bar */}\n        <header className=\"navbar\">\n          <div id=\"nav-icon1\" className={isSongListOpen ? 'open' : ''} onClick={toggleSongList}>\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n          \n          <nav className=\"nav-links left\">\n            <Link to=\"/SongPage\">\n              <img src={songsIcon} alt=\"Songs\" className=\"nav-icon\" />\n              <span>Songs</span>\n            </Link>\n            <Link to=\"/HistoryPage\" state={{ currentSong: currentSong, currentSongIndex: currentSongIndex }}>\n              <img src={historyIcon} alt=\"History\" className=\"nav-icon\" />\n              <span>History</span>\n            </Link>\n          </nav>\n\n          {/* Center Curved Logo */}\n          <div className=\"logo-container\">\n            <a href=\"/SongPage\" className=\"logo\">\n              <span className=\"star-light\">\n                <span>STAR</span>         \n                  <img src={logoIcon} alt=\"Logo\" className=\"logo-icon\" style={{ verticalAlign: 'middle' }} />\n                <span className=\"light\">LIGHT</span>\n              </span>\n            </a>\n          </div>\n\n          <nav className=\"nav-links right\">\n            <Link to=\"/EventPage\" state={{ currentSong: currentSong, currentSongIndex: currentSongIndex }}>\n              <img src={eventsIcon} alt=\"Events\" className=\"nav-icon\" />\n              <span>Events</span>\n            </Link>\n            <Link to=\"/StorePage\" state={{ currentSong: currentSong, currentSongIndex: currentSongIndex }}>\n              <img src={storeIcon} alt=\"Store\" className=\"nav-icon\" />\n              <span>Store</span>\n            </Link>\n          </nav>\n          \n          {/* Song List Sidebar */}\n          <div className={`sidebar ${isSongListOpen ? 'open' : ''}`} style={{ backgroundImage: `url(${bgSidebarImage})` }}>\n            <div className=\"search-bar-container\">\n              <form className=\"search-form\" onSubmit={handleSearchSubmit}>\n                <label htmlFor=\"search\" className=\"screen-reader-text\">Search</label>\n                <input\n                  type=\"search\"\n                  id=\"search\"\n                  placeholder=\"Search songs...\"\n                  value={searchQuery}\n                  onChange={handleSearchChange}\n                  className=\"search-field\"\n                />\n                <button type=\"submit\" className=\"search-submit\">\n                  <FaSearch className=\"search-bar-icon\" />\n                </button>\n              </form>\n            </div>\n            <ul>\n              {filteredSongs.map((song, index) => (\n                <li key={index} className=\"song-item\" onClick={() => handleSongClick(song)}>\n                  <div className=\"song-info-sidebar\">\n                    <img src={songSidebarIcon} alt=\"Song Sidebar Icon\" className=\"song-sidebar-icon\" />\n                    <span className=\"sidebar-song\">\n                      {song.title}\n                    </span>\n                  </div>\n                  <div className=\"song-bg\" style={{ backgroundImage: `url(${song.backgroundUrl})` }}></div>\n                  <span className=\"sidebar-song-title\">\n                    {song.title}\n                  </span>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          <div className=\"leave-button\">\n            <img src={leaveIcon} alt=\"Leave\" className=\"leave-icon\" style={{ width: '26p</button>x', height: '26px' }} onClick={handleLeaveClick} /> \n          </div>\n        </header>\n\n        {/* Current Page Content */}\n        <div className=\"content-layer\">\n          {/* Background Image */}\n          <div className=\"background-image\">\n            <img src={currentSong && currentSong.backgroundUrl ? `${currentSong.backgroundUrl}` : ''} alt=\"Background\" />\n          </div>\n          \n          {/* Content and Buttons */}\n          <div className=\"song-content\">\n            {/* User Profile */}\n            <div className=\"user-profile\">\n              <table>\n                <tr>\n                  <td>\n                    <div className=\"user-name\">{userProfile.name }</div>\n                    <div className=\"user-id\">ID: {userProfile.id }</div>\n                  </td>\n                  <td>\n                    <Link to=\"/ProfilePage\">\n                      <img src={userProfile.profilePic || profilePicPlaceholder} alt=\"Profile\" className=\"profile-img\" />\n                    </Link>\n                  </td>\n                </tr>\n              </table>\n            </div>\n\n            {/* Next/Previous Buttons */}\n            <div className=\"song-navigation\">\n              <button className=\"nav-btn prev-btn\" onClick={handlePreviousSong}>\n                <img src={previousArrow} alt=\"Previous\" style={{ width: '21px', height: '21px' }} />\n              </button>\n              <button className=\"nav-btn next-btn\" onClick={handleNextSong}>\n                <img src={nextArrow} alt=\"Next\" style={{ width: '21px', height: '21px' }} />\n              </button>\n            </div>\n\n            {/* Song Container */}\n            <div className=\"song-container\">\n              <div className=\"song-identity\">\n                <div className=\"difficulty-text\">Song level</div>\n                <div className=\"difficulty-value\">{currentSong?.difficulty}</div>\n              </div>\n              <div className=\"song-info\">\n                <div className=\"song-name\">{currentSong?.title }</div>\n                <div className=\"artist-name\">- {currentSong?.artist } -</div>\n                <div className=\"best-score\">Best Score{/*bestScore !== null ? bestScore : 'N/A'*/}</div>\n              </div>\n              <div className=\"play-button-container\">\n                <button className=\"play-button\" onClick={handlePlayButtonClick}>\n                  <div className=\"play-icon-container\">\n                    <span className=\"play-icon\">▶</span>\n                  </div>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n        {showPopup && (\n          <div className=\"popup-overlay\">\n            <div className=\"popup-content\">\n              <h2>Confirm Leave</h2>\n              <p>Are you sure you want to leave the game?</p>\n              <button className=\"stay-button\" onClick={handleCancelLeave}>Stay</button>\n              <button className=\"leave-button\" onClick={handleConfirmLeave}>Leave</button>\n            </div>\n          </div>\n        )}\n      </div>\n      <Unity unityProvider={unityProvider} />\n      {isGameOver === true && (\n        <p>{`Game Over ${userName}! You've scored ${score} points.`}</p>\n      )}\n    </Fragment>\n  );\n}\n\nexport default SongPage;\n","/*\n Requests the browser for a fullscreen.\n This function requires **CONSCIOUS USER INTERACTION**, so\n please use this inside onClick/onChanged/whatever event.\n\n Yours truly,\n DUT.\n */\nexport const requestFullScreen = () => {\n    const elem = document.documentElement;\n    if (elem.requestFullscreen) {\n        elem.requestFullscreen();\n    } else if (elem.mozRequestFullScreen) { // Firefox\n        elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) { // Chrome, Safari and Opera\n        elem.webkitRequestFullscreen();\n    } else if (elem.msRequestFullscreen) { // IE/Edge\n        elem.msRequestFullscreen();\n    }\n}\n"],"names":["LandingPage","lazy","HistoryPage","EventPage","StorePage","ProfilePage","GameApp","rootUrl","SongPage","isSongListOpen","setIsSongListOpen","useState","userProfile","setUserProfile","songs","setSongs","currentSongIndex","setCurrentSongIndex","showPopup","setShowPopup","isGameOver","setIsGameOver","userName","setUserName","score","setScore","searchQuery","setSearchQuery","bestScore","setBestScore","fuse","Fuse","keys","threshold","filteredSongs","search","map","result","item","unityProvider","sendMessage","addEventListener","removeEventListener","useUnityContext","loaderUrl","dataUrl","frameworkUrl","codeUrl","navigate","useNavigate","handleGameOver","useCallback","useEffect","async","userResponse","axios","get","headers","withCredentials","status","userData","data","id","name","profilePic","avatar","profilePicPlaceholder","console","error","statusText","songsResponse","fetchedSongs","length","fetchData","handleNextSong","imgElement","document","querySelector","classList","add","prevIndex","remove","once","handlePreviousSong","handleLeaveClick","currentSong","audio","audioUrl","Audio","loop","play","catch","pause","triggerButtonHoverEffect","buttonClass","button","setTimeout","handleKeyDown","event","keyCode","window","preventDefault","_jsxs","Fragment","children","_jsx","Suspense","fallback","Routes","Route","path","element","songId","className","onClick","toggleSongList","Link","to","src","songsIcon","alt","state","historyIcon","href","logoIcon","style","verticalAlign","eventsIcon","storeIcon","backgroundImage","bgSidebarImage","onSubmit","htmlFor","type","placeholder","value","onChange","target","FaSearch","song","index","findIndex","s","handleSongClick","songSidebarIcon","title","backgroundUrl","leaveIcon","width","height","previousArrow","nextArrow","difficulty","artist","post","requestFullScreen","handleCancelLeave","handleConfirmLeave","location","Unity","elem","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen"],"sourceRoot":""}