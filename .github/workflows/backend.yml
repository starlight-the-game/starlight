name: Backend sanity check (C#)

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions: 
  contents: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.x

      - name: Restore NuGet packages
        run: dotnet restore

      - name: Run backend tests
        run: dotnet test -c Release --nologo --no-restore
      
      - name: Build and compile backend package
        run: |
          dotnet publish Starlight.Backend /p:EnvironmentName=Development -r linux-x64 -o build/linux-x64
          dotnet publish Starlight.Backend /p:EnvironmentName=Development -r win-x64 -o build/win-x64
          
      - name: Create backend package.
        run: |
          sudo apt-get install zip -y
          zip -r linux-x64.zip build/linux-x64
          zip -r win-x64.zip build/win-x64
          
      - name: Tag latest commit as releasable.
        uses: richardsimko/update-tag@v1
        with:
          tag_name: "runnable" 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release backend package for self-hosting.
        uses: softprops/action-gh-release@v2
        with:
          name: Rolling release of the project
          draft: false
          tag_name: "runnable"
          make_latest: true
          body: |
            # Special delivery here!
            
            Before you are fooled by "xx days ago" text in the sidebar, I just want to tell you that, that is not how git `reftag`s works - **the said date is their first creation date!**
            
            The commit hash is what matter. I repeat, please **LOOK AT THE COMMIT HASH** before filling a ticket saying "Your delivery files are outdated!" and ruin my day!
            
            ## What does the files mean?
            - `linux-x64`: intended for most Linux servers.
            - `win-x64`: intended for Windows, including but not limited to: Windows, Windows Server, IIS.
            
            ## Make sure port `5000` in your deployment machine is available, and your "middleman" Nginx/Apache is properly configured!
          files: |
            linux-x64.zip
            win-x64.zip
